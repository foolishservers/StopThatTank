"VertexLitGeneric"
{
	"$basetexture" "vgui\replay\thumbnails\models\bots\sniper\sniper_bot_blue"

	// Fallback bump map texture for computers that aren't using DX9
	<dx90
	{
		"$bumpmap"		"water/dx80_tfwater001_normal"
	}

	"$bumpmap" 			"water/tfwater001_normal"
	"$surfaceprop" 			"metal"

	// BLU Uber
	"$envmap" 					"effects/cubemapper"
	"$envmaptint" 				"[1.25 1.25 1.25]"
	"$detail" 					"vgui\replay\thumbnails\models\bots\shared\detail_blue_invun"
	"$detailblendfactor" 		"1"

	// $selfillum is used for making textures glow, remove this if you're using $alphatest or $translucent in your texture or else they won't function
	"$selfillum" 			"1"
	"$selfIllumFresnel" 			"1"
	"$selfIllumFresnelMinMaxExp" 	"[0 18 13]"

	// Invun parameters used for the flashing effect when ubercharge has depleted, remove this if you don't want the flashing effect
	"$invulnlevel" 			"0"
	"$invulnexponent" 			"1"
	"$invulnfmax" 			"18"
	"$invulnscale" 			"0"
	"$invulnphong" 			"1"
	"$half" 				"0.5"
	"$invulnphongfading" 		"0"
	"$invulnphongfull" 			"1"
	"$invulnphongoutput" 		"1" 
	"$invulnexponentfading" 		"1"
	"$invulnexponentfull" 		"13"
	"$invulnexponentoutput" 		"1"
	"$invulnfmaxfading" 		"-31"
	"$invulnfmaxfull" 			"18"
	"$invulnfmaxoutput" 		"1"

	"$phong" 			"1"
	"$phongexponent"  		"35"
	"$phongboost" 			"1"	
	"$lightwarptexture" 			"models/player/pyro/pyro_lightwarp"
	"$phongfresnelranges"		"[11 1 8]"
	
	// Rim lighting parameters
	"$rimlight" 			"1"		
	"$rimlightexponent" 			"11"
	"$rimlightboost" 			"5"	
	
	// Cloaking
	"$cloakPassEnabled" 		"1"

	"Proxies"
	{
		"spy_invis"
		{
		}
		"AnimatedTexture"
		{
			"animatedtexturevar" 			"$bumpmap"
			"animatedtextureframenumvar" 		"$bumpframe"
			"animatedtextureframerate" 			"70"
		}

		// Material proxies for the flashing ubercharge effect, remove this if you don't want the flashing effect
		"InvulnLevel"
		{
			"resultVar" 				"$invulnlevel"
		}
		"LessOrEqual"
		{
			"srcVar1"					"$invulnlevel"
			"srcVar2"					"$half"
			"lessEqualVar"				"$invulnphongfading"
			"greaterVar"				"$invulnphongfull"
			"resultVar"				"$invulnphongoutput"
		}
		"LessOrEqual"
		{
			"srcVar1"					"$invulnlevel"
			"srcVar2"					"$half"
			"lessEqualVar"				"$invulnfmaxfading"
			"greaterVar"				"$invulnfmaxfull"
			"resultVar"				"$invulnfmaxoutput"
		}
		"LessOrEqual"
		{
			"srcVar1"					"$invulnlevel"
			"srcVar2"					"$half"
			"lessEqualVar"				"$invulnexponentfading"
			"greaterVar"				"$invulnexponentfull"
			"resultVar"				"$invulnexponentoutput"
		}
		"Sine"
		{
			"resultVar" 				"$invulnfmax"
			"sineperiod" 				".3"
			"sinemin" 				"$invulnfmaxoutput"
			"sinemax" 				"18"
		}
		"Sine"
		{
			"resultVar" 				"$invulnphong"
			"sineperiod" 				".3"
			"sinemin" 				"$invulnphongoutput"
			"sinemax" 				"1"
		}
		"Sine"
		{
			"resultVar" 				"$invulnexponent"
			"sineperiod" 				".3"
			"sinemin" 				"$invulnexponentoutput"
			"sinemax" 				"13"
		}
		"Equals"
		{
			"srcVar1" 				"$invulnexponent"
			"resultVar" 				"$selfillumfresnelminmaxexp[2]"
		}
		"Equals"
		{
			"srcVar1" 				"$invulnfmax"
			"resultVar" 				"$selfillumfresnelminmaxexp[1]"
		}
		"Equals"
		{
			"srcVar1" 				"$invulnphong"
			"resultVar" 				"$phongboost" 
		}
	}
}